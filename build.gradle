plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.21'
    id 'application'
    id 'distribution'
    id 'edu.sc.seis.launch4j' version '2.5.3'
}

group = 'me.ckhoidea'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

mainClassName = "MainKt"

application {
    mainClass = 'MainKt'
}

launch4j {
    // when use openjdk 11, you dont have jre, so preferJdk
    // if you use azul or adopt, you can choose jre
    jdkPreference = 'preferJre'
    // just place a jre folder with launch4j generated exe in the same level
    bundledJrePath = 'jre'
    bundledJre64Bit = true
    mainClassName = 'MainKt'
    icon = "${projectDir}/src/main/resources/logo.ico"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.13.4'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.13.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.4'
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.formdev:flatlaf:2.4"
    implementation "com.formdev:flatlaf-intellij-themes:2.4"
    implementation 'com.squareup.okhttp3:okhttp-urlconnection:4.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

// create fatjar
tasks.register('uberJar', Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.main.output

    manifest {
        attributes["Main-Class"] = "MainKt"
    }

    dependsOn configurations.runtimeClasspath
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}